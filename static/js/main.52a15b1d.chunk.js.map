{"version":3,"sources":["views/index/indexNav.js","views/index/indexContent.js","store/action/actions.js","views/index/indexPagination.js","views/index/index.js","views/topic/details.js","views/topic/index.js","views/about/about.js","views/getstart/getstart.js","router/index.js","component/header.js","App.js","store/reducer/topic_list.js","store/reducer/single_topic.js","store/index.js","index.js"],"names":["IndexNav","props","search","useLocation","tab","qs","parse","substr","activeIndex","types","indexOf","id","selectedKeys","mode","indexNav","map","item","index","Item","key","to","txt","IndexContent","page","getData","dispatch","useDispatch","limit","mrender","type","axios","get","then","res","data","useGetTopics","useEffect","useSelector","state","getTopics","loading","dataSource","renderItem","title","IndexPagination","current","pageSize","total","itemRender","originalElement","IndexPage","className","Details","author","content","loginname","dangerouslySetInnerHTML","__html","TopicPage","pathname","history","useHistory","split","pop","catch","err","console","log","response","error_msg","errMsg","useGetTopic","getTopic","isError","banner","closable","message","description","afterClose","goBack","AboutPage","GetstartPage","routes","path","exact","render","nav","Header","findIndex","offsetTop","xs","sm","theme","App","Content","action","createStore","combineReducers","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.52a15b1d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link, useLocation} from 'react-router-dom'\r\nimport { Menu } from 'antd';\r\nimport {indexNav, types} from '../../router/index';\r\nimport qs from 'qs';\r\n\r\nexport default function IndexNav(props){\r\n    let {search} = useLocation();\r\n    let {tab} = qs.parse(search.substr(1))\r\n    let activeIndex = tab?types.indexOf(tab):0;\r\n    return (\r\n        <Menu id=\"index_nav\"\r\n            selectedKeys = {[activeIndex+\"\"]}\r\n            mode=\"horizontal\">\r\n                {indexNav.map((item, index)=>{\r\n                    return <Menu.Item key={index}><Link to={item.to}>{item.txt}</Link></Menu.Item>\r\n                })}\r\n        </Menu>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom'\r\nimport { List } from 'antd';\r\nimport qs from 'qs'\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetTopics } from '../../store/action/actions'\r\n\r\nfunction IndexContent() {\r\n    let { search } = useLocation();\r\n    let { tab, page} = qs.parse(search.substr(1));\r\n    \r\n    // let tab = query.tab;\r\n    // console.log(tab,page)\r\n    let getData = useGetTopics();\r\n\r\n    // // console.log(getData)\r\n    useEffect(() => {\r\n        getData(page, tab);\r\n    }, [tab,page])\r\n\r\n    let { data, loading } = useSelector(state => state.getTopics);\r\n    return <List\r\n        loading={loading}\r\n        dataSource={data}\r\n        renderItem={\r\n            (item) => {\r\n                let { id, title } = item;\r\n                return <List.Item><Link to={`/topic/${id}`}>{title}</Link></List.Item>\r\n            }\r\n        }>\r\n    </List>\r\n\r\n}\r\n\r\nexport default IndexContent\r\n","import axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nfunction useGetTopics() {\r\n    let dispatch = useDispatch()\r\n    return function(page=1,tab='all', limit=15, mrender=true) {\r\n        dispatch({ type: 'topics_loading'})\r\n        axios.get(`https://cnodejs.org/api/v1/topics?tab=${tab}&page=${page}&limit=${limit}&mrender=${mrender}`).then((res) => {\r\n            //console.log(res)    \r\n            dispatch({ type: 'topics_loadover', data: res.data.data })\r\n        })\r\n    }\r\n}\r\n\r\nfunction useGetTopic() {\r\n    let dispatch = useDispatch()\r\n    return function(id=null) {\r\n        dispatch({ type: 'topic_loading'})\r\n        axios.get(`https://cnodejs.org/api/v1/topic/${id}`).then((res) => {\r\n            //console.log(res)    \r\n            dispatch({ type: 'topic_loadover', data: res.data.data })\r\n        }).catch((err)=>{\r\n            console.log(err.response.data.error_msg)\r\n            dispatch({\r\n                type: 'topic_error',\r\n                errMsg: err.response.data.error_msg\r\n            })\r\n            \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport { useGetTopics, useGetTopic }\r\n\r\n\r\n// import axios from \"axios\";\r\n// import { useDispatch } from \"react-redux\";\r\n\r\n// const http = axios.create({\r\n//     baseURL:\" https://cnodejs.org/api/v1\"\r\n// });\r\n\r\n// // 获取主题列表\r\n// function useGetTopics(){\r\n//     let dispatch = useDispatch();\r\n//     return function(page=1,tab=\"all\",limit=15,mdrender=true){\r\n//         dispatch({\r\n//             type:\"topics_loading\"\r\n//         });\r\n//         http.get(`/topics?tab=${tab}&page=${page}&limit=${limit}&mdrender=${mdrender}`).then((res)=>{\r\n//             //console.log(res);\r\n//             dispatch({\r\n//                 type:\"topics_loadover\",\r\n//                 data:res.data.data\r\n//             })\r\n//         })\r\n//     }\r\n// }\r\n\r\n// // 获取主题详情\r\n// function useTopic(){\r\n//     let dispatch = useDispatch();\r\n//     return function(id){\r\n//         dispatch({\r\n//             type:\"topics_loading\"\r\n//         });\r\n//         http.get(`/topic/${id}`).then((res)=>{\r\n//             dispatch({\r\n//                 type:\"topic_loadover\",\r\n//                 data:res.data.data\r\n//             });\r\n//         }).catch((err)=>{\r\n//             dispatch({\r\n//                 type:\"topic_error\",\r\n//                 errMsg: err.response.data.error_msg\r\n//             });\r\n//         })\r\n//     }\r\n// }\r\n\r\n// export {useGetTopics,useTopic}\r\n","import React from 'react';\r\nimport { Pagination } from 'antd';\r\nimport qs from 'qs'\r\nimport { useLocation, Link } from 'react-router-dom';\r\n\r\nexport default function IndexPagination() {\r\n    let { search } = useLocation();\r\n    // console.log(history)\r\n    let { tab = \"all\", page = 1 } = qs.parse(search.substr(1))\r\n    // console.log(tab, page)\r\n    return <div>\r\n        <Pagination\r\n            // showQuickJumper={'false'}\r\n            current={page - 0}\r\n            pageSize={20}\r\n            total={1000}\r\n            itemRender={(page, type, originalElement) => {\r\n                switch (type) {\r\n                    case \"page\":\r\n                        return <Link to={`/?tab=${tab}&page=${page}`}>{page}</Link>\r\n                    case \"prev\":\r\n                        return <Link to={`/?tab=${tab}&page=${page}`}>prev</Link>\r\n                    case \"next\":\r\n                        return <Link to={`/?tab=${tab}&page=${page}`}>next</Link>\r\n                    default:\r\n                        return <Link to={`/?tab=${tab}&page=${page}`}>{originalElement}</Link>;\r\n\r\n                }\r\n            }} />\r\n    </div>\r\n}","import React from 'react';\r\nimport IndexNav from './indexNav'\r\nimport IndexContent from './indexContent'\r\nimport IndexPagination from './indexPagination';\r\nfunction IndexPage(){\r\n\r\n    return (\r\n        <div className=\"index_page\">\r\n            <IndexNav/>\r\n            <IndexContent/>\r\n            <IndexPagination/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IndexPage\r\n","import React from 'react';\r\nimport { Card } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Details(props) {\r\n    let { loading, data } = props;\r\n    let { title, author, content } = data\r\n    // console.log(data)\r\n    return <Card\r\n        loading={loading}\r\n        title={loading?\"\":<h1>{title} - <Link to=\"\" >{author.loginname}</Link></h1>}\r\n        >\r\n        <div dangerouslySetInnerHTML={{\r\n            __html: content\r\n        }}></div>\r\n    </Card>\r\n}","import React, { useEffect, Fragment } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { useGetTopic } from '../../store/action/actions';\r\nimport { useSelector } from 'react-redux';\r\nimport { List, Alert } from 'antd';\r\nimport Details from './details';\r\n\r\nfunction TopicPage(){\r\n    let {pathname} = useLocation()\r\n    let history = useHistory()\r\n    let id = pathname.split('/').pop()\r\n    let getData = useGetTopic();\r\n    useEffect(() => {\r\n        getData(id);\r\n    }, [id])\r\n\r\n    \r\n    let {loading, data, isError, errMsg} = useSelector(state=>state.getTopic) \r\n    console.log(errMsg)\r\n    return (\r\n        <div>\r\n            {\r\n                isError?<Alert \r\n                banner={true}\r\n                closable\r\n                type=\"warning\"\r\n                message={\"Wrong\"}\r\n                description={\r\n                    <Fragment>\r\n                        <p>{errMsg}</p>\r\n                        <p>Close the window to continue</p>\r\n\r\n                    </Fragment>\r\n                }\r\n                afterClose={()=>{\r\n                    history.goBack()\r\n                }}\r\n                />:<Details \r\n                loading={loading}\r\n                data={data}/>\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopicPage\r\n","import React from 'react';\r\n// import style from '../../static/css/about.module.css'\r\nfunction AboutPage(){\r\n    return (\r\n        <div>about</div>\r\n\r\n    )\r\n}\r\n\r\nexport default AboutPage","import React from 'react';\r\nimport { Card } from 'antd';\r\n\r\nfunction GetstartPage(){\r\n    return (\r\n        <Card\r\n            title={\"Get Started\"}\r\n            type={\"inner\"}\r\n            \r\n        >Getstart</Card>\r\n    );\r\n}\r\n\r\nexport default GetstartPage\r\n ","import React from 'react';\r\nimport IndexPage from '../views/index/index'\r\nimport TopicPage from '../views/topic/index'\r\nimport AboutPage from '../views/about/about'\r\nimport GetstartPage from '../views/getstart/getstart'\r\n\r\n\r\nconst types = ['all', 'good', 'hire']\r\nconst routes = [\r\n    {\r\n        path:'/',\r\n        exact:true,\r\n        render(props){\r\n            return <IndexPage {...props}/>\r\n        }\r\n    },\r\n    {\r\n        path:'/topic/:id',\r\n        exact:true,\r\n        render(props){\r\n            return <TopicPage {...props}/>\r\n        }\r\n    },\r\n    {\r\n        path:'/user/:username',\r\n        exact:true,\r\n        render(props){\r\n            return <IndexPage {...props}/>\r\n        }\r\n    },\r\n    {\r\n        path:'/about',\r\n        exact:true,\r\n        render(props){\r\n            return <AboutPage {...props}/>\r\n        }\r\n    },\r\n    {\r\n        path:'/getstart',\r\n        exact:true,\r\n        render(props){\r\n            return <GetstartPage {...props}/>\r\n        }\r\n    }\r\n]\r\n\r\n\r\nconst nav = [\r\n    {\r\n        to:'/',\r\n        txt:'Home'\r\n    },\r\n    {\r\n        to:'/about',\r\n        txt:'About'\r\n    },\r\n    {\r\n        to:'/getstart',\r\n        txt:'Get Start'\r\n    }\r\n]\r\n\r\nconst indexNav = [\r\n    {\r\n        to:'/?tab=all',\r\n        txt: 'All'\r\n    },\r\n    {\r\n        to:'/?tab=good',\r\n        txt: 'Selected'\r\n    },\r\n    {\r\n        to:'/?tab=hire',\r\n        txt: 'Hiring'\r\n    },\r\n]\r\n\r\nexport {nav, routes, indexNav, types};\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import IndexPage from \"../views/index/index\";\r\n// import TopicPage from \"../views/topic/index\";\r\n// import UserPage from \"../views/user/index\";\r\n// import GetstartPage from \"../views/getstart/getstart\";\r\n// import AboutPage from \"../views/about/about\";\r\n// import Page404 from \"../views/page404/index\";\r\n// const types = [\"all\",\"good\",\"share\",\"ask\",\"job\",\"dev\"]; \r\n// const routes = [\r\n//     {\r\n//         path: \"/\",\r\n//         exact: true,\r\n//         render(props){\r\n            \r\n//             return <IndexPage {...props} />\r\n//         }\r\n//     },{\r\n//         path: \"/topic/:id\",\r\n//         exact: true,\r\n//         render(props){\r\n//             return <TopicPage {...props} />\r\n//         }\r\n//     },{\r\n//         path: \"/user/:username\",\r\n//         exact: true,\r\n//         render(props){\r\n//             return <UserPage {...props} />\r\n//         }\r\n//     },{\r\n//         path: \"/getstart\",\r\n//         exact: true,\r\n//         render(props){\r\n//             return <GetstartPage {...props} />\r\n//         }\r\n//     },{\r\n//         path: \"/about\",\r\n//         exact: true,\r\n//         render(props){\r\n//             return <AboutPage {...props} />\r\n//         }\r\n//     },{\r\n//         path: \"\",\r\n//         exact: false,\r\n//         render(props){\r\n//             return <Page404 {...props} />\r\n//         }\r\n//     }\r\n// ]; \r\n\r\n// const nav = [{\r\n//     to: \"/\",\r\n//     txt:\"首页\"\r\n// },{\r\n//     to: \"/getstart\",\r\n//     txt:\"新手入门\"\r\n// },{\r\n//     to: \"/about\",\r\n//     txt:\"关于我们\"\r\n// }];\r\n\r\n// const indexNav = [\r\n//     {\r\n//         name:\"全部\",\r\n//         url :\"/?tab=all\"\r\n//     },{\r\n//         name:\"精华\",\r\n//         url :\"/?tab=good\"\r\n//     },{\r\n//         name:\"分享\",\r\n//         url :\"/?tab=share\"\r\n//     },{\r\n//         name:\"问答\",\r\n//         url :\"/?tab=ask\"\r\n//     },{\r\n//         name:\"招聘\",\r\n//         url :\"/?tab=job\"\r\n//     },{\r\n//         name:\"客户端测试\",\r\n//         url :\"/?tab=dev\"\r\n//     }\r\n// ];\r\n\r\n// export {routes,nav,indexNav,types} ","import React from 'react';\r\nimport {Link, useLocation} from 'react-router-dom'\r\nimport { Layout, Affix, Row, Col, Menu } from 'antd';\r\nimport {nav} from '../router/index';\r\n\r\nfunction Header() {\r\n    let {pathname} = useLocation();\r\n    let activeIndex = nav.findIndex((item)=>item.to===pathname);\r\n    // let activeIndex = nav.findIndex(item=>item.to===pathname)\r\n    return <Affix offsetTop={0}>\r\n            <Layout.Header id=\"header\">\r\n                <div className=\"wrap\">\r\n                    <Row>\r\n                        <Col xs={24} sm={4}>\r\n                            <h1 id=\"icon\"><Link to=\"/\">CNode</Link></h1>\r\n                        </Col>\r\n                        <Col xs={24} sm={20}>\r\n                            <Menu \r\n                            theme=\"dark\"\r\n                            //default method execute after component mounted\r\n                            selectedKeys = {[activeIndex+\"\"]}\r\n                            mode=\"horizontal\">\r\n                                {nav.map((item, index)=>{\r\n                                    return <Menu.Item key={index}><Link to={item.to}>{item.txt}</Link></Menu.Item>\r\n                                })}\r\n                            </Menu>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n\r\n            </Layout.Header>\r\n        </Affix>\r\n    \r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Pagination, Button, Layout } from 'antd';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Header from './component/header';\r\nimport {routes} from \"./router/index\"\r\n\r\nfunction App(){\r\n    return (\r\n        <Layout>\r\n            <Header/>\r\n            <Layout.Content>\r\n                <Switch>\r\n                    {routes.map((item, index)=>{\r\n                        return <Route \r\n                            path={item.path}\r\n                            key={index}\r\n                            exact={item.exact}\r\n                            render={(props)=>{\r\n                                return item.render(props)\r\n                            }}\r\n                        />\r\n                    })}\r\n                </Switch>\r\n            </Layout.Content>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","\r\nfunction getTopics(getTopics={\r\n    loading:true,\r\n    data:[]\r\n},action){\r\n    switch(action.type){\r\n        case \"topics_loading\":\r\n            return {\r\n                loading:true,\r\n                data:[]\r\n            }\r\n        case \"topics_loadover\":\r\n            return {\r\n                loading:false,\r\n                data:action.data\r\n            }\r\n    }\r\n    return getTopics;\r\n}\r\n\r\n\r\n\r\nexport default getTopics;","function getTopic(getTopic={\r\n    loading:true,\r\n    data:[],\r\n    isError: false,\r\n    errMsg:\"\"\r\n}, action){\r\n    switch(action.type){\r\n        case \"topic_loading\":\r\n            return {\r\n                loading:true,\r\n                data:[]\r\n            }\r\n        case \"topic_loadover\":\r\n            return {\r\n                loading:false,\r\n                data:action.data\r\n            }\r\n        case \"topic_error\":\r\n            return {\r\n                loading:true,\r\n                data:[],\r\n                isError: true,\r\n                errMsg:action.message\r\n            }\r\n    }\r\n    return getTopic;\r\n}\r\n\r\nexport default getTopic","// import React from 'react';\r\n// import {createStore, combineReducers} from 'redux'\r\n// import getTopics from './reducer/topic_list'\r\n\r\n// export default createStore(combineReducers({\r\n//     getTopics\r\n// }));\r\n\r\nimport {createStore,combineReducers} from \"redux\";\r\nimport getTopics from \"./reducer/topic_list\";\r\nimport getTopic from \"./reducer/single_topic\";\r\nexport default createStore(combineReducers({\r\n    getTopics,\r\n    getTopic\r\n}));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store/index';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport \"./static/css/base.css\"\r\n\r\nReactDOM.render(\r\n\r\n    <Provider store={store} >\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>   \r\n    </Provider>,\r\n    document.getElementById('root'));"],"sourceRoot":""}